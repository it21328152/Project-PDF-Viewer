{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\Project PDF Viewer\\\\frontend\\\\src\\\\components\\\\PDFViewer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Document, Page, pdfjs } from 'react-pdf';\nimport axios from 'axios';\n\n// Set the workerSrc from the installed pdfjs-dist package\nimport workerSrc from 'pdfjs-dist/build/pdf.worker.min.mjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\npdfjs.GlobalWorkerOptions.workerSrc = workerSrc;\nconst PDFViewer = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [pdfUrl, setPdfUrl] = useState('');\n  const [numPages, setNumPages] = useState(null);\n  const [error, setError] = useState('');\n  const onDocumentLoadSuccess = ({\n    numPages\n  }) => {\n    setNumPages(numPages);\n  };\n  useEffect(() => {\n    const fetchPdf = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const res = await axios.get(`http://localhost:5000/api/pdfs/${id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          responseType: 'blob'\n        });\n        const url = URL.createObjectURL(new Blob([res.data], {\n          type: 'application/pdf'\n        }));\n        setPdfUrl(url);\n      } catch (err) {\n        setError('Failed to load PDF');\n      }\n    };\n    fetchPdf();\n\n    // Cleanup object URL on component unmount\n    return () => {\n      if (pdfUrl) {\n        URL.revokeObjectURL(pdfUrl);\n      }\n    };\n  }, [id, pdfUrl]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Document, {\n      file: pdfUrl,\n      onLoadSuccess: onDocumentLoadSuccess,\n      children: Array.from(new Array(numPages), (el, index) => /*#__PURE__*/_jsxDEV(Page, {\n        pageNumber: index + 1\n      }, `page_${index + 1}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(PDFViewer, \"Sjzy47AB/M2Jv6dFBsOd3mCQq7c=\", false, function () {\n  return [useParams];\n});\n_c = PDFViewer;\nexport default PDFViewer;\nvar _c;\n$RefreshReg$(_c, \"PDFViewer\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Document","Page","pdfjs","axios","workerSrc","jsxDEV","_jsxDEV","GlobalWorkerOptions","PDFViewer","_s","id","pdfUrl","setPdfUrl","numPages","setNumPages","error","setError","onDocumentLoadSuccess","fetchPdf","token","localStorage","getItem","res","get","headers","Authorization","responseType","url","URL","createObjectURL","Blob","data","type","err","revokeObjectURL","children","fileName","_jsxFileName","lineNumber","columnNumber","file","onLoadSuccess","Array","from","el","index","pageNumber","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/Project PDF Viewer/frontend/src/components/PDFViewer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Document, Page, pdfjs } from 'react-pdf';\r\nimport axios from 'axios';\r\n\r\n// Set the workerSrc from the installed pdfjs-dist package\r\nimport workerSrc from 'pdfjs-dist/build/pdf.worker.min.mjs';\r\npdfjs.GlobalWorkerOptions.workerSrc = workerSrc;\r\n\r\nconst PDFViewer = () => {\r\n  const { id } = useParams();\r\n  const [pdfUrl, setPdfUrl] = useState('');\r\n  const [numPages, setNumPages] = useState(null);\r\n  const [error, setError] = useState('');\r\n\r\n  const onDocumentLoadSuccess = ({ numPages }) => {\r\n    setNumPages(numPages);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchPdf = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const res = await axios.get(`http://localhost:5000/api/pdfs/${id}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`\r\n          },\r\n          responseType: 'blob'\r\n        });\r\n        const url = URL.createObjectURL(new Blob([res.data], { type: 'application/pdf' }));\r\n        setPdfUrl(url);\r\n      } catch (err) {\r\n        setError('Failed to load PDF');\r\n      }\r\n    };\r\n\r\n    fetchPdf();\r\n\r\n    // Cleanup object URL on component unmount\r\n    return () => {\r\n      if (pdfUrl) {\r\n        URL.revokeObjectURL(pdfUrl);\r\n      }\r\n    };\r\n  }, [id, pdfUrl]);\r\n\r\n  return (\r\n    <div>\r\n      {error ? (\r\n        <p>{error}</p>\r\n      ) : (\r\n        <Document\r\n          file={pdfUrl}\r\n          onLoadSuccess={onDocumentLoadSuccess}\r\n        >\r\n          {Array.from(new Array(numPages), (el, index) => (\r\n            <Page key={`page_${index + 1}`} pageNumber={index + 1} />\r\n          ))}\r\n        </Document>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PDFViewer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}