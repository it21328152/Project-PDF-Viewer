{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\Project PDF Viewer\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\nimport Home from './components/Home';\nimport PDFViewer from './components/PDFViewer';\nimport Login from './components/Login';\nimport Signup from './components/Signup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  const isAuthenticated = !!localStorage.getItem('token');\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signup\",\n        element: /*#__PURE__*/_jsxDEV(Signup, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/pdf/:id\",\n        element: /*#__PURE__*/_jsxDEV(PdfViewerWrapper, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/*\",\n        element: isAuthenticated ? /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 38\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n// Wrapper component to fetch fileUrl and pass it to PDFViewer\n_c = App;\nconst PdfViewerWrapper = () => {\n  _s();\n  // Use useParams to get id parameter from URL\n  const {\n    id\n  } = useParams();\n\n  // Simulate fetching fileUrl based on id (replace with actual fetching logic)\n  const fetchFileUrl = () => {\n    // Example logic to fetch fileUrl based on id\n    return `/api/pdf/${id}`; // Replace with your actual API endpoint\n  };\n  return /*#__PURE__*/_jsxDEV(PDFViewer, {\n    fileUrl: fetchFileUrl()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 10\n  }, this);\n};\n_s(PdfViewerWrapper, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", true);\n_c2 = PdfViewerWrapper;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"PdfViewerWrapper\");","map":{"version":3,"names":["React","BrowserRouter","Router","Route","Routes","Navigate","Home","PDFViewer","Login","Signup","jsxDEV","_jsxDEV","App","isAuthenticated","localStorage","getItem","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","PdfViewerWrapper","to","_c","_s","id","useParams","fetchFileUrl","fileUrl","_c2","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/Project PDF Viewer/frontend/src/App.js"],"sourcesContent":["import React from 'react';\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\nimport Home from './components/Home';\nimport PDFViewer from './components/PDFViewer';\nimport Login from './components/Login';\nimport Signup from './components/Signup';\n\nconst App = () => {\n  const isAuthenticated = !!localStorage.getItem('token');\n\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/signup\" element={<Signup />} />\n        <Route path=\"/login\" element={<Login />} />\n        {/* Define a route for PDF viewer with id parameter */}\n        <Route path=\"/pdf/:id\" element={<PdfViewerWrapper />} />\n        {/* Default route based on authentication */}\n        <Route\n          path=\"/*\"\n          element={isAuthenticated ? <Home /> : <Navigate to=\"/login\" />}\n        />\n      </Routes>\n    </Router>\n  );\n};\n\n// Wrapper component to fetch fileUrl and pass it to PDFViewer\nconst PdfViewerWrapper = () => {\n  // Use useParams to get id parameter from URL\n  const { id } = useParams();\n\n  // Simulate fetching fileUrl based on id (replace with actual fetching logic)\n  const fetchFileUrl = () => {\n    // Example logic to fetch fileUrl based on id\n    return `/api/pdf/${id}`; // Replace with your actual API endpoint\n  };\n\n  return <PDFViewer fileUrl={fetchFileUrl()} />;\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,kBAAkB;AACnF,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,MAAM,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAChB,MAAMC,eAAe,GAAG,CAAC,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAEvD,oBACEJ,OAAA,CAACT,MAAM;IAAAc,QAAA,eACLL,OAAA,CAACP,MAAM;MAAAY,QAAA,gBACLL,OAAA,CAACR,KAAK;QAACc,IAAI,EAAC,SAAS;QAACC,OAAO,eAAEP,OAAA,CAACF,MAAM;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7CX,OAAA,CAACR,KAAK;QAACc,IAAI,EAAC,QAAQ;QAACC,OAAO,eAAEP,OAAA,CAACH,KAAK;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAE3CX,OAAA,CAACR,KAAK;QAACc,IAAI,EAAC,UAAU;QAACC,OAAO,eAAEP,OAAA,CAACY,gBAAgB;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAExDX,OAAA,CAACR,KAAK;QACJc,IAAI,EAAC,IAAI;QACTC,OAAO,EAAEL,eAAe,gBAAGF,OAAA,CAACL,IAAI;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAAGX,OAAA,CAACN,QAAQ;UAACmB,EAAE,EAAC;QAAQ;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb,CAAC;;AAED;AAAAG,EAAA,GApBMb,GAAG;AAqBT,MAAMW,gBAAgB,GAAGA,CAAA,KAAM;EAAAG,EAAA;EAC7B;EACA,MAAM;IAAEC;EAAG,CAAC,GAAGC,SAAS,CAAC,CAAC;;EAE1B;EACA,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB;IACA,OAAO,YAAYF,EAAE,EAAE,CAAC,CAAC;EAC3B,CAAC;EAED,oBAAOhB,OAAA,CAACJ,SAAS;IAACuB,OAAO,EAAED,YAAY,CAAC;EAAE;IAAAV,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC/C,CAAC;AAACI,EAAA,CAXIH,gBAAgB;AAAAQ,GAAA,GAAhBR,gBAAgB;AAatB,eAAeX,GAAG;AAAC,IAAAa,EAAA,EAAAM,GAAA;AAAAC,YAAA,CAAAP,EAAA;AAAAO,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}