{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\Project PDF Viewer\\\\frontend\\\\src\\\\components\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { Box, Button, Container, List, ListItem, ListItemText, Typography, Card, CardContent, CircularProgress } from '@mui/material';\nimport { styled } from '@mui/system';\nimport { useDropzone } from 'react-dropzone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Root = styled(Box)(({\n  theme\n}) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  marginTop: theme.spacing(8)\n}));\n_c = Root;\nconst StyledCard = styled(Card)(({\n  theme\n}) => ({\n  width: '100%',\n  marginTop: theme.spacing(4)\n}));\n_c2 = StyledCard;\nconst UploadBox = styled(Box)(({\n  theme,\n  isDragActive\n}) => ({\n  border: '2px dashed #ccc',\n  borderRadius: theme.shape.borderRadius,\n  padding: theme.spacing(4),\n  textAlign: 'center',\n  transition: 'background-color 0.3s',\n  backgroundColor: isDragActive ? '#e0f7fa' : 'transparent'\n}));\n_c3 = UploadBox;\nconst Home = () => {\n  _s();\n  const [pdfs, setPdfs] = useState([]);\n  const [file, setFile] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  useEffect(() => {\n    const fetchPdfs = async () => {\n      const token = localStorage.getItem('token');\n      const res = await axios.get('http://localhost:5000/api/pdfs', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setPdfs(res.data.pdfs);\n    };\n    fetchPdfs();\n  }, []);\n  const handleUpload = async () => {\n    const formData = new FormData();\n    formData.append('pdf', file);\n    const token = localStorage.getItem('token');\n    try {\n      setUploading(true);\n      await axios.post('http://localhost:5000/api/pdfs/upload', formData, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setFile(null);\n      // Refetch PDFs\n      const res = await axios.get('http://localhost:5000/api/pdfs', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setPdfs(res.data.pdfs);\n    } catch (error) {\n      console.error('Error uploading PDF:', error);\n    } finally {\n      setUploading(false);\n    }\n  };\n  const onDrop = acceptedFiles => {\n    setFile(acceptedFiles[0]);\n  };\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop,\n    accept: 'application/pdf'\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"md\",\n    children: /*#__PURE__*/_jsxDEV(Root, {\n      children: [/*#__PURE__*/_jsxDEV(StyledCard, {\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h1\",\n            variant: \"h5\",\n            children: \"Upload PDF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(UploadBox, {\n            ...getRootProps({\n              isDragActive\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              ...getInputProps()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), isDragActive ? /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"Drop the file here ...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"Drag 'n' drop a file here, or click to select a file\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), file && /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            style: {\n              marginTop: '10px'\n            },\n            children: file.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleUpload,\n            disabled: !file || uploading,\n            style: {\n              marginTop: '10px'\n            },\n            children: uploading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 24\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 28\n            }, this) : 'Upload'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledCard, {\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h2\",\n            variant: \"h6\",\n            children: \"Uploaded PDFs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            children: pdfs.map(pdf => /*#__PURE__*/_jsxDEV(ListItem, {\n              button: true,\n              component: Link,\n              to: `/pdf/${pdf._id}`,\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: pdf.filename\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 19\n              }, this)\n            }, pdf._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"rSPfbmGr/biI2PeYitaVcBOILWk=\", false, function () {\n  return [useDropzone];\n});\n_c4 = Home;\nexport default Home;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Root\");\n$RefreshReg$(_c2, \"StyledCard\");\n$RefreshReg$(_c3, \"UploadBox\");\n$RefreshReg$(_c4, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","axios","Link","Box","Button","Container","List","ListItem","ListItemText","Typography","Card","CardContent","CircularProgress","styled","useDropzone","jsxDEV","_jsxDEV","Root","theme","display","flexDirection","alignItems","marginTop","spacing","_c","StyledCard","width","_c2","UploadBox","isDragActive","border","borderRadius","shape","padding","textAlign","transition","backgroundColor","_c3","Home","_s","pdfs","setPdfs","file","setFile","uploading","setUploading","fetchPdfs","token","localStorage","getItem","res","get","headers","Authorization","data","handleUpload","formData","FormData","append","post","error","console","onDrop","acceptedFiles","getRootProps","getInputProps","accept","component","maxWidth","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","style","name","color","onClick","disabled","size","map","pdf","button","to","_id","primary","filename","_c4","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/Project PDF Viewer/frontend/src/components/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { Box, Button, Container, List, ListItem, ListItemText, Typography, Card, CardContent, CircularProgress } from '@mui/material';\r\nimport { styled } from '@mui/system';\r\nimport { useDropzone } from 'react-dropzone';\r\n\r\nconst Root = styled(Box)(({ theme }) => ({\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n  marginTop: theme.spacing(8),\r\n}));\r\n\r\nconst StyledCard = styled(Card)(({ theme }) => ({\r\n  width: '100%',\r\n  marginTop: theme.spacing(4),\r\n}));\r\n\r\nconst UploadBox = styled(Box)(({ theme, isDragActive }) => ({\r\n  border: '2px dashed #ccc',\r\n  borderRadius: theme.shape.borderRadius,\r\n  padding: theme.spacing(4),\r\n  textAlign: 'center',\r\n  transition: 'background-color 0.3s',\r\n  backgroundColor: isDragActive ? '#e0f7fa' : 'transparent',\r\n}));\r\n\r\nconst Home = () => {\r\n  const [pdfs, setPdfs] = useState([]);\r\n  const [file, setFile] = useState(null);\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchPdfs = async () => {\r\n      const token = localStorage.getItem('token');\r\n      const res = await axios.get('http://localhost:5000/api/pdfs', {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n      setPdfs(res.data.pdfs);\r\n    };\r\n    fetchPdfs();\r\n  }, []);\r\n\r\n  const handleUpload = async () => {\r\n    const formData = new FormData();\r\n    formData.append('pdf', file);\r\n    const token = localStorage.getItem('token');\r\n    try {\r\n      setUploading(true);\r\n      await axios.post('http://localhost:5000/api/pdfs/upload', formData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      });\r\n      setFile(null);\r\n      // Refetch PDFs\r\n      const res = await axios.get('http://localhost:5000/api/pdfs', {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n      setPdfs(res.data.pdfs);\r\n    } catch (error) {\r\n      console.error('Error uploading PDF:', error);\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const onDrop = (acceptedFiles) => {\r\n    setFile(acceptedFiles[0]);\r\n  };\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop, accept: 'application/pdf' });\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"md\">\r\n      <Root>\r\n        <StyledCard>\r\n          <CardContent>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Upload PDF\r\n            </Typography>\r\n            <UploadBox {...getRootProps({ isDragActive })}>\r\n              <input {...getInputProps()} />\r\n              {\r\n                isDragActive ?\r\n                  <Typography>Drop the file here ...</Typography> :\r\n                  <Typography>Drag 'n' drop a file here, or click to select a file</Typography>\r\n              }\r\n            </UploadBox>\r\n            {file && <Typography variant=\"body1\" style={{ marginTop: '10px' }}>{file.name}</Typography>}\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleUpload}\r\n              disabled={!file || uploading}\r\n              style={{ marginTop: '10px' }}\r\n            >\r\n              {uploading ? <CircularProgress size={24} /> : 'Upload'}\r\n            </Button>\r\n          </CardContent>\r\n        </StyledCard>\r\n\r\n        <StyledCard>\r\n          <CardContent>\r\n            <Typography component=\"h2\" variant=\"h6\">\r\n              Uploaded PDFs\r\n            </Typography>\r\n            <List>\r\n              {pdfs.map((pdf) => (\r\n                <ListItem button component={Link} to={`/pdf/${pdf._id}`} key={pdf._id}>\r\n                  <ListItemText primary={pdf.filename} />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </CardContent>\r\n        </StyledCard>\r\n      </Root>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}